openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'MAI Super Chat API'
  description: API сервиса обмена сообщениями
servers:
  - url: http://localhost:8081
    description: Message and Groups server
paths:
  /list:
    get:
      summary: Получение личной переписки с пользователем
      parameters:
      - name: user_id
        description: идентификатор пользователя, переписку с которым нужно получить
        in: query
        required: true
        schema:
          type: integer
          format: int64
     
      responses:
        '200':
          description: array of messages
          content:
            application/json:
              schema:
               type: array
               items: 
                $ref: '#/components/schemas/ListedMessage'
        401:
          description: Not authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthrizedResponse'
  /send:
    post:
      summary: Отправить личное сообщение пользователю
      parameters:
        - name: text
          description: Текст сообщения
          in: query
          required: true
          schema:
            type: string
        - name: to
          description: Идентификатор получателя
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Message
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Message'
        401:
          description: Not authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthrizedResponse'
  /groups/send:
    post:
      summary: Отправить сообщение в группу
      parameters:
        - name: text
          description: Текст сообщения
          in: query
          required: true
          schema:
            type: string
        - name: group_id
          description: Идентификатор группы
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Message
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Message'
        401:
          description: Not authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthrizedResponse'
  /groups/add_user:
    post:
      summary: Добавить пользователя в группу
      parameters:
        - name: to
          description: Идентификатор пользователя
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: group_id
          description: Идентификатор группы
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Ok
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OkResponse'
        401:
          description: Not authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthrizedResponse'
  /groups:
    post:
      summary: Создать новую группу
      parameters:
        - name: title
          description: Имя новой группы
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Group'
        401:
          description: Not authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthrizedResponse'
    get:
      summary: Получение списка сообщений в группе
      parameters:
      - name: group_id
        description: идентификатор группы, сообщения из которой нужно получить
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: array of messages
          content:
            application/json:
              schema:
               type: array
               items: 
                $ref: '#/components/schemas/ListedMessage'
        401:
          description: Not authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthrizedResponse'      
components:
  schemas:
    ListedMessage:
      type: object
      required:
        - message
        - from_requester
      properties:
        message:
          $ref: '#/components/schemas/Message'
        from_requester:
          description: Является ли автор запроса автором сообщения
          type: boolean

    Message:
      type: object
      required:
        - id
        - text
        - created_at
        - author_id
      properties:
        id:
          type: integer
          format: int64
        text:
          description: Текст сообщения
          type: string
        created_at:
          description: Время отправки
          type: string
        author_id:
          description: Идентификатор автора
          type: integer
          format: int64
        recipient_id:
          description: Идентификатор получателя
          type: integer
          format: int64
        group_id:
          description: Идентификатор группы
          type: integer
          format: int64

    Group:
      type: object
      required:
        - id
        - title
        - admin_id
      properties:
        id:
          type: integer
          format: int64
        title:
          description: Имя группы
          type: string
        admin_id:
          description: Идентификатор администратора
          type: integer
          format: int64

    UnauthrizedResponse:
      type: object
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: string
        detail:
          type: string
        instance:
          type: string

    OkResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
        
  securitySchemes:
      basicAuth:     
        type: http
        scheme: basic
security:
  - basicAuth: []
